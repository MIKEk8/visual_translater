[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "screen-translator"
description = "Universal screen text translator with OCR and TTS support"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Multimedia :: Graphics :: Capture :: Screen Capture",
    "Topic :: Text Processing :: Linguistic",
]
keywords = ["translation", "ocr", "tts", "screen-capture", "desktop"]
requires-python = ">=3.8"
dependencies = [
    "Pillow>=10.0.0",
    "keyboard>=0.13.5",
    "pystray>=0.19.4",
    "pytesseract>=0.3.10",
    "googletrans==4.0.0rc1",
    "pyttsx3>=2.90",
    "pyperclip>=1.8.2",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0",
    "pylint>=3.0.0",
    "bandit>=1.7.0",
    "safety>=3.0.0",
    "radon>=6.0.0",
    "vulture>=2.10",
    "pydocstyle>=6.3.0",
    "pycodestyle>=2.11.0",
    "mccabe>=0.7.0",
    "prospector>=1.10.0",
    "autoflake>=2.0.0",
]
build = [
    "pyinstaller>=5.0.0",
]

[project.urls]
Homepage = "https://github.com/your-username/screen-translator"
Repository = "https://github.com/your-username/screen-translator.git"
Documentation = "https://github.com/your-username/screen-translator/blob/main/docs/"
Issues = "https://github.com/your-username/screen-translator/issues"

[project.scripts]
screen-translator = "main:main"

[tool.setuptools_scm]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["src", "tests"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config --tb=short"
testpaths = ["src/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marks tests as async",
    "gui: marks tests that require GUI (skip in headless)",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore:.*tkinter.*:UserWarning",
    "ignore:.*pyttsx3.*:UserWarning",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "src/tests/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "src/tests"]
skips = ["B101", "B601"]  # Skip assert_used and shell_command_line

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    ".venv",
    ".tox",
]

[tool.vulture]
min_confidence = 80
exclude = ["build/", "dist/", ".venv/", "docs/", "tests/"]
ignore_names = ["visit_*", "do_*", "_on_*", "_handle_*"]

[tool.pydocstyle]
convention = "google"
add-ignore = ["D100", "D104", "D107", "D203", "D213"]
match-dir = "(?!tests).*"

[tool.radon]
exclude = "tests/*,.venv/*,build/*,dist/*"
cc_min = "C"
mi_min = "B"